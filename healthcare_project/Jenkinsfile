pipeline {
    agent any
    
    environment {
        DJANGO_SETTINGS_MODULE = 'healthcare_project.settings'
        PYTHONPATH = "${WORKSPACE}/backend"
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Setup Backend') {
            steps {
                dir('backend') {
                    sh 'python3 -m venv venv'
                    sh 'source venv/bin/activate && pip3 install -r requirements.txt'
                }
            }
        }
        
        stage('Setup Frontend') {
            steps {
                dir('frontend') {
                    sh 'npm install'
                }
            }
        }
        
        stage('Train ML Model') {
            steps {
                dir('backend') {
                    sh 'source venv/bin/activate && python3 api/ml/generate_sample_data.py'
                    sh 'source venv/bin/activate && python3 api/ml/train_model.py'
                    archiveArtifacts artifacts: 'api/ml/model.pkl,api/ml/scaler.pkl', onlyIfSuccessful: true
                }
            }
        }
        
        stage('Run Backend Tests') {
            steps {
                dir('backend') {
                    sh 'source venv/bin/activate && python3 manage.py test'
                    junit 'backend/reports/*.xml'
                }
            }
        }
        
        stage('Run Frontend Tests') {
            steps {
                dir('frontend') {
                    sh 'npm test -- --coverage --watchAll=false'
                    archiveArtifacts artifacts: 'coverage/lcov-report/*', onlyIfSuccessful: true
                }
            }
        }
        
        stage('Build Frontend') {
            steps {
                dir('frontend') {
                    sh 'npm run build'
                    archiveArtifacts artifacts: 'build/**/*', onlyIfSuccessful: true
                }
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging environment...'
                
                dir('backend') {
                    sh '''
                        source venv/bin/activate
                        python3 manage.py collectstatic --noinput
                        python3 manage.py migrate
                    '''
                }
                
                sh 'cp -r frontend/build/* backend/static/'
                
                sh '''
                    sudo systemctl stop healthcare-app
                    sudo cp -r backend/* /var/www/healthcare-app/
                    sudo systemctl start healthcare-app
                '''
            }
        }
    }
    
    post {
        always {
            echo 'Pipeline completed'
            cleanWs()
        }
        success {
            echo 'Pipeline succeeded'
        }
        failure {
            echo 'Pipeline failed'
        }
    }
}

